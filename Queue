public interface Queue<E> {
	
	/**
     * Removes the reference to Solution at the front of
     * the queue. Assumes the queue is not empty
     * @return 
     *		The reference to removed Solution
     */
	E dequeue ();
	
	/**
     * Add the reference to Solution at the rear of
     * the queue. Assumes s is not null
     * @param s
     *		The (non null) reference to the new element
     */
	 
	void enqueue (E element);
	
	/**
     * Returns true if the Queue is currently empty
     * @return 
     *		true if the queue is empty 
     */
	 
	boolean isEmpty();
	
	/**
     * Expands the ArrayList object q
     * 
     */
	void expand ();
	
	/**
     * Returns object at q[index]
     * @return 
     *		object 
     */
	E peek ();
	
	/**
     * Returns the ArrayList's size 
	 
     * @return count
     *      an integer value of the object q's size
     */
	int size ();
	
}
